create table public.users (
  id serial not null,
  username character varying(50) not null,
  password character varying(255) not null,
  role character varying(20) null default 'admin'::character varying,
  first_name character varying(100) null,
  last_name character varying(100) null,
  phone character varying(20) null,
  department character varying(100) null,
  position character varying(100) null,
  employee_id character varying(50) null,
  license_number character varying(100) null,
  specialization text null,
  created_at timestamp with time zone null default now(),
  updated_at timestamp with time zone null default now(),
  avatar_url text null,
  bio text null,
  gender character varying(20) null,
  emergency_contact_name character varying(255) null,
  emergency_contact_phone character varying(50) null,
  emergency_contact_relationship character varying(100) null,
  last_login timestamp with time zone null,
  login_count integer null default 0,
  password_hash text null,
  constraint users_pkey primary key (id),
  constraint users_employee_id_key unique (employee_id),
  constraint users_username_key unique (username),
  constraint users_role_check check (
    (
      (role)::text = any (
        (
          array[
            'admin'::character varying,
            'superadmin'::character varying
          ]
        )::text[]
      )
    )
  )
) TABLESPACE pg_default;

create trigger create_user_defaults_trigger
after INSERT on users for EACH row
execute FUNCTION create_user_defaults ();

create trigger update_users_updated_at BEFORE
update on users for EACH row
execute FUNCTION update_updated_at_column ();